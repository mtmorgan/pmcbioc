[{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"instal-and-load","dir":"Articles","previous_headings":"","what":"Instal and load","title":"Introduction to 'pmcbioc'","text":"Install development version pmcbioc GitHub : Load package :","code":"# install.packages(\"devtools\") devtools::install_github(\"mtmorgan/pmcbioc\") library(pmcbioc)"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"retrieve-and-process-pubmedcentral-data","dir":"Articles","previous_headings":"","what":"Retrieve and process PubMedCentral data","title":"Introduction to 'pmcbioc'","text":"pmcbioc requires user visit PubMedCentral web site, search terms citations intersted, chooses save results local disk XML file. analysis document, visited Bioconductor web site, located Publications page, followed ‘PubMed Central’ link predefined search, saved results XML file. steps can automated NIH EUtils API, e.g., using renterez.  XML contains full text articles satisfying query, means can quite large; 71,259 citations term ‘Bioconductor’ retrieved 2023-09-08 occupy 8.5GB disk space. Suppose result file pmc_result.xml, current working directory. Data processing involves four steps Create DuckDB database, accessed using duckdb R package. Parse article metadata (PubMedCentral id, title, journal, year, pmid, authors, keywords, citation PubMed ids) tables database. Index XML file allow fast access full record individual articles, record index database. Closing perhaps renaming database.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"database-creation","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"Database creation","title":"Introduction to 'pmcbioc'","text":"Create new DuckDB database current working directory. Use temporary file name avoid accidentally -writing existing work. Connection new (empty) database allows updates (read_only: FALSE). Connecting existing database defualt read-(read_only: TRUE); existing database can opened allow updates pmcbioc_db() argument read_only = TRUE.","code":"db_file <- tempfile(tmpdir = \".\", fileext = \".duckdb\") db <- pmcbioc_db(db_file) db #> pmcbioc_db: ./file154ed7a070044.duckdb #> connected: TRUE #> read_only: FALSE #> db_tables():"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"article-metadata","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"Article metadata","title":"Introduction to 'pmcbioc'","text":"Parse metadata article XML file database using xml_parse(). arguments path XML file, database created previous step. process expensive time memory. Bioconductor query took 1 minute per 1000 records, ultimately consumed 18Gb memory. Processing using XML::xmlEventParse(), ‘XPath’ queries used extract metadata article. Details paths used visble using (non-exported) function process completes, database contain four tables","code":"## not evaluated xml_parse(\"pmc_result.xml\", db) ## not evaluated pmcbioc:::xml_branches(db) db_tables(db) #> [1] \"article\" \"author\"  \"keyword\" \"refpmid\""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"xml-index","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"XML index","title":"Introduction to 'pmcbioc'","text":"function xml_index() creates index large XML file downloaded PubMedCentral, making easy query subsets articles information extracted database xml_parse(). Create add index process faster less memory-intensive xml_parse(), still takes several minutes. completion, database contains additional table index.","code":"## not evaluated xml_index(\"pmc_result.xml\", db) db_tables(db) #> [1] \"article\" \"author\"  \"index\"   \"keyword\" \"refpmid\""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"final-steps","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"Final steps","title":"Introduction to 'pmcbioc'","text":"Remember disconnect database, buffered data written disk. Optionally, rename temporary file something permanent.","code":"db_disconnect(db) #> pmcbioc_db: ./file154ed7a070044.duckdb #> connected: FALSE #> read_only: FALSE ## not evaluated file.rename(db_file, \"pmc_result.duckdb\")"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"explore-our-data","dir":"Articles","previous_headings":"","what":"Explore our data","title":"Introduction to 'pmcbioc'","text":"Start connecting database. Since database already exists, opens ‘read ’ one worry accidentally corrupting .","code":"db <- pmcbioc_db(\"~/a/github/pmcbioc/pmc_result.duckdb\") db #> pmcbioc_db: ~/a/github/pmcbioc/pmc_result.duckdb #> connected: TRUE #> read_only: TRUE #> db_tables(): article, author, index, keyword, refpmid"},{"path":[]},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"article","dir":"Articles","previous_headings":"Explore our data > Article metadata","what":"article","title":"Introduction to 'pmcbioc'","text":"Use dplyr functions open explore tables. Start article table. row represents result returned original PubMedCentral query. fields id internal identifier, representing sequence article original XML file. used conjunction index table. pmcid (PubMedCentral identifier), title, journal, pmid (PubMed identifier) self-explanatory. year earliest year recorded PubMedCentral record. articles multiple publication dates associated , e.g., electronic publication, submission NIH, etc. Missing values occur XPath used extract data failed identify relevant informaton. believe content XML associated record partly discretion journal. Use article table plot citations function year. Start loading ggplot2 package Summarize number publications per year. Remember collect() result tibble fully -memory. Plot relationship. One row removed, corresponding records year extracted XML. final year incomplete, lag publication indexing PubMedCentral, last two points anomally.   Journals 100 articles mentioning Bioconductor summarized (unnamed journal corresponds records XPath extract name).","code":"tbl(db, \"article\") #> # Source:   table<article> [?? x 6] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>       id pmcid    title                                      journal  year pmid  #>    <int> <chr>    <chr>                                      <chr>   <int> <chr> #>  1     1 10484053 Plasma-Derived Small Extracellular Vesicl… Invest…  2023 3767… #>  2     2 10483746 A methylation- and immune-related lncRNA … Journa…  2023 3767… #>  3     3 10482981 A fungal sesquiterpene biosynthesis gene … Nature…  2023 3767… #>  4     4 10482899 The mutational landscape of the adult hea… Nature…  2023 3767… #>  5     5 10482349 Shigellainduces epigenetic reprogramming … Scienc…  2023 NA    #>  6     6 10478435 Sex differences in muscle protein express… Biolog…  2023 3767… #>  7     7 10478242 Increased paternal corticosterone exposur… BMC Bi…  2023 3766… #>  8     8 10478393 Effect of asciminib and vitamin K2 on Abe… BMC Ca…  2023 3767… #>  9     9 10478213 Proteomic analysis unveils Gb3-independen… Journa…  2023 3767… #> 10    10 10480445 Single cell multiomic analysis reveals di… Nature…  2023 3766… #> # ℹ more rows tbl(db, \"article\") |>     count() #> # Source:   SQL [1 x 1] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>       n #>   <dbl> #> 1 71259 library(ggplot2) pubs_per_year <-     tbl(db, \"article\") |>     count(year) |>     collect() ggplot(pubs_per_year) +     aes(x = year, y = n) +     geom_point() +     scale_y_log10() #> Warning: Removed 1 rows containing missing values (`geom_point()`). tbl(db, \"article\") |>     count(journal, sort = TRUE) |>     filter(n >= 100) |>     collect() |>     DT::datatable()"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"author","dir":"Articles","previous_headings":"Explore our data > Article metadata","what":"author","title":"Introduction to 'pmcbioc'","text":"author table associates author surname given names PubMedCentral identifiers. instances individual authors extracted (e.g., journal reported author using format XPath capture). entries reported NA, simply omitted table. Thus authors recieve credit publications. prolific authors (least unique combinations surname given names) found :  Data inconsistencies easily resolved, e.g., ? Publications individual authors can found joining author article tables using PubMedCentral id.","code":"tbl(db, \"author\") #> # Source:   table<author> [?? x 3] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>    pmcid    surname givenname #>    <chr>    <chr>   <chr>     #>  1 10484053 Li      Bing      #>  2 10484053 Sun     Nan       #>  3 10484053 Yang    Fuhua     #>  4 10484053 Guo     Kailei    #>  5 10484053 Wu      Lingzi    #>  6 10484053 Ma      Mingming  #>  7 10484053 Shao    Hui       #>  8 10484053 Li      Xiaorong  #>  9 10484053 Zhang   Xiaomin   #> 10 10483746 Chen    Lu        #> # ℹ more rows tbl(db, \"author\") |>     count() #> # Source:   SQL [1 x 1] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>        n #>    <dbl> #> 1 733519 tbl(db, \"author\") |>     count(surname, givenname, sort = TRUE) |>     head(100) |>     collect() |>     DT::datatable() tbl(db, \"author\") |>     filter(surname == \"Morgan\", givenname %like% \"Martin%\") |>     count(surname, givenname) #> # Source:   SQL [2 x 3] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>   surname givenname     n #>   <chr>   <chr>     <dbl> #> 1 Morgan  Martin       26 #> 2 Morgan  Martin T.     5 tbl(db, \"author\") |>     filter(surname == \"Morgan\", givenname %like% \"Martin%\") |>     left_join(tbl(db, \"article\"), by = \"pmcid\") |>     collect() |>     mutate(         author = paste(surname, givenname, sep = \", \"),         ## remove \"\\n\" in one record         title = gsub(\"[[:space:]]+\", \" \", title)     ) |>     select(author, year, title, journal, pmcid, pmid) |>     DT::datatable()"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"keyword-and-refpmid","dir":"Articles","previous_headings":"Explore our data > Article metadata","what":"keyword and refpmid","title":"Introduction to 'pmcbioc'","text":"keyword table summarizes keywords associated publication. Keywords standardized, e.g, bioinformatic bioinformatics used. Nonetheless, provides insight areas Bioconductor useful; analysis associate keyword year model shifting areas interest.  refpmid table summarizes PubMed identifiers citations article. One can ask publications mentioning ‘Bioconductor’ cited publications mentioning ‘Bioconductor’","code":"tbl(db, \"keyword\") #> # Source:   table<keyword> [?? x 2] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>    pmcid    keyword                      #>    <chr>    <chr>                        #>  1 10484053 CXCL5                        #>  2 10484053 exosomes                     #>  3 10484053 miR-410-3p                   #>  4 10484053 small extracellular vesicles #>  5 10484053 Vogt-Koyanagi-Harada         #>  6 10483746 mrlncRNA                     #>  7 10483746 irlncRNA                     #>  8 10483746 OC                           #>  9 10483746 Chemoresistance              #> 10 10483746 Tumor-infiltrating           #> # ℹ more rows tbl(db, \"keyword\") |>     count(keyword = tolower(keyword)) |>     filter(n >= 100) |>     arrange(desc(n)) |>     collect() |>     DT::datatable() tbl(db, \"refpmid\") #> # Source:   table<refpmid> [?? x 2] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>    pmcid    refpmid  #>    <chr>    <chr>    #>  1 10484053 20036008 #>  2 10484053 29138505 #>  3 10484053 25108386 #>  4 10484053 29321438 #>  5 10484053 29111815 #>  6 10484053 29998211 #>  7 10484053 23584393 #>  8 10484053 28955186 #>  9 10484053 21324974 #> 10 10484053 15741221 #> # ℹ more rows ## FIXME: is this correct? tbl(db, \"refpmid\") |>     count(refpmid, sort = TRUE) |>     right_join(tbl(db, \"article\"), by = c(refpmid = \"pmid\")) |>     arrange(desc(n)) |>     head(100) |>     collect() |>     select(n_citn = \"n\", title, journal, year) |>     DT::datatable() #> Warning: ORDER BY is ignored in subqueries without LIMIT #> ℹ Do you need to move arrange() later in the pipeline or use window_order() instead?"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"querying-individual-records","dir":"Articles","previous_headings":"Explore our data","what":"Querying individual records","title":"Introduction to 'pmcbioc'","text":"XML records extremely rich. Individual records can retrieved queried. instance fifth record can use index table query full XML record using XPath count number references full XML first five records records can queried using, e.g, XPath xmlChildren() [[ XML package.","code":"tbl(db, \"article\") |>     filter(id == 5) #> # Source:   SQL [1 x 6] #> # Database: DuckDB 0.8.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>      id pmcid    title                                       journal  year pmid  #>   <int> <chr>    <chr>                                       <chr>   <int> <chr> #> 1     5 10482349 Shigellainduces epigenetic reprogramming o… Scienc…  2023 NA xml_file <- \"~/a/github/pmcbioc/pmc_result.xml\" tbl(db, \"index\") |>     filter(id == 5) |>     xml_xpath(         \"count(//article/back/ref-list/ref)\",         xml_file = xml_file     ) #> [1] 81 first_five <-     tbl(db, \"index\") |>     filter(id <= 5) |>     xml_xpath(xml_file = xml_file) first_five[\"//article-meta//article-title\"] |>     XML::xmlValue() #> [1] \"Plasma-Derived Small Extracellular Vesicles From VKH Patients Suppress T Cell Proliferation Via MicroRNA-410-3p Modulation of CXCL5 Axis\" #> [2] \"A methylation- and immune-related lncRNA signature to predict ovarian cancer outcome and uncover mechanisms of chemoresistance\"           #> [3] \"A fungal sesquiterpene biosynthesis gene cluster critical for mutualist-pathogen transition in Colletotrichum tofieldiae\"                 #> [4] \"The mutational landscape of the adult healthy parous and nulliparous human breast\"                                                        #> [5] \"Shigella induces epigenetic reprogramming of zebrafish neutrophils\""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"final-steps-1","dir":"Articles","previous_headings":"","what":"Final steps","title":"Introduction to 'pmcbioc'","text":"Remember disconnect database.","code":"db_disconnect(db) #> pmcbioc_db: ~/a/github/pmcbioc/pmc_result.duckdb #> connected: FALSE #> read_only: TRUE"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Introduction to 'pmcbioc'","text":"","code":"sessionInfo() #> R version 4.3.1 Patched (2023-08-16 r84986) #> Platform: aarch64-apple-darwin21.6.0 (64-bit) #> Running under: macOS Monterey 12.6.8 #>  #> Matrix products: default #> BLAS:   /Users/ma38727/bin/R-4-3-branch/lib/libRblas.dylib  #> LAPACK: /Users/ma38727/bin/R-4-3-branch/lib/libRlapack.dylib;  LAPACK version 3.11.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/New_York #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.4.3 pmcbioc_0.0.1 dplyr_1.1.2   #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.7        utf8_1.2.3        generics_0.1.3    spdl_0.0.5        #>  [5] stringi_1.7.12    digest_0.6.33     magrittr_2.0.3    evaluate_0.21     #>  [9] grid_4.3.1        fastmap_1.1.1     blob_1.2.4        rprojroot_2.0.3   #> [13] jsonlite_1.8.7    DBI_1.1.3         purrr_1.0.2       fansi_1.0.4       #> [17] crosstalk_1.2.0   scales_1.2.1      XML_3.99-0.14     textshaping_0.3.6 #> [21] jquerylib_0.1.4   duckdb_0.8.1-2    cli_3.6.1         rlang_1.1.1       #> [25] dbplyr_2.3.3      ellipsis_0.3.2    munsell_0.5.0     withr_2.5.0       #> [29] cachem_1.0.8      yaml_2.3.7        tools_4.3.1       memoise_2.0.1     #> [33] colorspace_2.1-0  DT_0.28           vctrs_0.6.3       R6_2.5.1          #> [37] lifecycle_1.0.3   RcppSpdlog_0.0.14 stringr_1.5.0     htmlwidgets_1.6.2 #> [41] fs_1.6.3          ragg_1.2.5        pkgconfig_2.0.3   desc_1.4.2        #> [45] pkgdown_2.0.7     pillar_1.9.0      bslib_0.5.1       gtable_0.3.4      #> [49] glue_1.6.2        Rcpp_1.0.11       systemfonts_1.0.4 highr_0.10        #> [53] xfun_0.40         tibble_3.2.1      tidyselect_1.2.0  knitr_1.43        #> [57] farver_2.1.1      htmltools_0.5.6   labeling_0.4.2    rmarkdown_2.24    #> [61] compiler_4.3.1"},{"path":"https://mtmorgan.github.io/pmcbioc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2023). pmcbioc: Summarize 'PubMedCentral' Publications Mentioning 'Bioconductor'. R package version 0.0.1, https://mtmorgan.github.io/pmcbioc/.","code":"@Manual{,   title = {pmcbioc: Summarize 'PubMedCentral' Publications Mentioning 'Bioconductor'},   author = {Martin Morgan},   year = {2023},   note = {R package version 0.0.1},   url = {https://mtmorgan.github.io/pmcbioc/}, }"},{"path":"https://mtmorgan.github.io/pmcbioc/index.html","id":"pmcbioc","dir":"","previous_headings":"","what":"Summarize PubMedCentral Publications Mentioning Bioconductor","title":"Summarize PubMedCentral Publications Mentioning Bioconductor","text":"goal pmcbioc facilitate summary analysis PubMedCentral result sets. PubMedCentral results XML files containing article metadata, body article, end matter (citations, etc.). pmcbioc parses XML extract article metadata (title, year, author, keyword, reference PMID) database quick access. pmcbioc also indexes PubMedCentral XML file provides facilities rapidly querying file.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Summarize PubMedCentral Publications Mentioning Bioconductor","text":"Install development version pmcbioc GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mtmorgan/pmcbioc\")"},{"path":"https://mtmorgan.github.io/pmcbioc/index.html","id":"use-and-example","dir":"","previous_headings":"","what":"Use and example","title":"Summarize PubMedCentral Publications Mentioning Bioconductor","text":"See introduction article basic use, including parsing indexing PubMedCentral XML database fast access key data. simple observations Bioconductor citations downloaded 2023-09-08 include: Publications grow expoonentially, perhaps decreased rate 2010. PLoS ONE, Scientific Reports Nature Communications three prominent venues publications Bioconductor. Authors mentioning Bioconductor little difficult distinguish (shared surname given names), mentioning unambiguous author ‘Quackenbush’. ‘Huber’ mentioning Bioconductor leader. Common keywords emphasize gene experession, RNA-Seq, methylation, transcriptomics, epigenetics, etc. Publications edgeR, DESeq2, limma, original Bioconductor book cited publications mentioning Bioconductor.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a PubMedCentral XML file for fast record access. — xml_index","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"xml_index() creates index XML file retrieved PubMedCentral, storing index duckdb database. Use xml_xpath() query index.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"","code":"xml_index(xml_file = \"pmc_result.xml\", db)"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"xml_file character(1) file path PubMedCentral XML file. db database object returned pmcbioc_db() read_only = FALSE.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"xml_index() returns pmcbioc_db database argument db.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse an PubMedCentral XML file to a DuckDB database — xml_parse","title":"Parse an PubMedCentral XML file to a DuckDB database — xml_parse","text":"xml_parse() processes PubMedCentral XML file extracting XML elements, tranforming text integer representations, loading result database.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse an PubMedCentral XML file to a DuckDB database — xml_parse","text":"","code":"xml_parse(xml_file, db)"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse an PubMedCentral XML file to a DuckDB database — xml_parse","text":"xml_parse() returns pmcbioc_db database passed argument db, updated include tables described . tables follows: article includes columns pmcid, title, journal, year, pmid. author one--many map pmcid author surname givenname. keyword one--many map pmcid keyword. refpmid one--many map pmcid refpmid PubMed identifiers cited references.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse an PubMedCentral XML file to a DuckDB database — xml_parse","text":"xml_parse() can slow, e.g., 1000 records per minute, grow consume large amount memory, e.g., 18 Gb. xml_parse() uses XML::xmlEventParse() iterate XML file. //article branch queried using XPath expressions. expressions subsequent transformations meant extract following information; currently, records processed correctly. pmcid: PubMedCentral identifier associated record. title: article title. journal: journal article published. year: year publication, represented integer. Articles may several publication dates (e.g., electronically physically). year earliest date record. pmid: PubMed identifier record. surname: Surname author. authors surname. givenname: Given name(s) author. authors given names. keyword: Keywords associated publication. Keywords standardized refpmid: PubMed identifiers reference record. pmcid used key across database tables.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"xml_xpath() queries indexed PubMedCentral XML file, returning records indicated db_index queried using xpath.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"","code":"xml_xpath(db_index, xpath = NULL, xml_file = \"pmc_result.xml\")"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"`db_index` tibble columns start length, typcially result filtering index table pmcbioc_db() database. `xpath` NULL character(1) XPath expression query records db_index.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"xpath = NULL, xml_xpath() returns XML object representing records db_index <pmc-articleset>...<\/pmc-articleset>. xpath character(1), records db_index queried using XPath. return value can coerced R representation XML::xmlValue().","code":""}]
