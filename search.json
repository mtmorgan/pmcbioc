[{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"instal-and-load","dir":"Articles","previous_headings":"","what":"Instal and load","title":"Introduction to 'pmcbioc'","text":"Install development version pmcbioc GitHub : Load package :","code":"# install.packages(\"devtools\") devtools::install_github(\"mtmorgan/pmcbioc\") library(pmcbioc)"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"retrieve-and-process-pubmedcentral-data","dir":"Articles","previous_headings":"","what":"Retrieve and process PubMedCentral data","title":"Introduction to 'pmcbioc'","text":"pmcbioc requires user visit PubMedCentral web site, search terms citations interested, chooses save results local disk XML file. analysis document, visited Bioconductor web site, located Publications page, followed ‘PubMed Central’ link predefined search, saved results XML file. steps can automated NIH EUtils API, e.g., using renterez.  XML contains full text articles satisfying query, means can quite large; 72,446 citations term ‘Bioconductor’ retrieved 2023-10-18 occupy 8.5GB disk space. Suppose result file pmc_result.xml, current working directory. Data processing involves four steps Create DuckDB database, accessed using duckdb R package. Parse article metadata (PubMedCentral id, title, journal, year, pmid, authors, keywords, citation PubMed ids) tables database. Index XML file allow fast access full record individual articles, record index database. Closing perhaps renaming database.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"database-creation","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"Database creation","title":"Introduction to 'pmcbioc'","text":"Create new DuckDB database current working directory. Use temporary file name avoid accidentally -writing existing work. Connection new (empty) database allows updates (read_only: FALSE). Connecting existing database default read-(read_only: TRUE); existing database can opened allow updates pmcbioc_db() argument read_only = TRUE.","code":"db_file <- tempfile(tmpdir = \".\", fileext = \".duckdb\") db <- pmcbioc_db(db_file) db #> pmcbioc_db: ./file90845f7a26f2.duckdb #> connected: TRUE #> read_only: FALSE #> db_tables():"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"article-metadata","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"Article metadata","title":"Introduction to 'pmcbioc'","text":"Parse metadata article XML file database using xml_parse(). arguments path XML file, database created previous step. process expensive time memory. Bioconductor query took 1 minute per 1000 records, ultimately consumed 18Gb memory. Processing using XML::xmlEventParse(), ‘XPath’ queries used extract metadata article. Details paths used visble using (non-exported) function process completes, database contain four tables","code":"## not evaluated xml_parse(\"pmc_result.xml\", db) ## not evaluated pmcbioc:::xml_branches(db) db_tables(db) #> [1] \"article\" \"author\"  \"keyword\" \"refpmid\""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"xml-index","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"XML index","title":"Introduction to 'pmcbioc'","text":"function xml_index() creates index large XML file downloaded PubMedCentral, making easy query subsets articles information extracted database xml_parse(). Create add index process faster less memory-intensive xml_parse(), still takes several minutes. completion, database contains additional table index.","code":"## not evaluated xml_index(\"pmc_result.xml\", db) db_tables(db) #> [1] \"article\" \"author\"  \"index\"   \"keyword\" \"refpmid\""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"final-steps","dir":"Articles","previous_headings":"Retrieve and process PubMedCentral data","what":"Final steps","title":"Introduction to 'pmcbioc'","text":"Remember disconnect database, buffered data written disk. Optionally, rename temporary file something permanent.","code":"db_disconnect(db) #> pmcbioc_db: ./file90845f7a26f2.duckdb #> connected: FALSE #> read_only: FALSE ## not evaluated file.rename(db_file, \"pmc_result.duckdb\")"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"explore-our-data","dir":"Articles","previous_headings":"","what":"Explore our data","title":"Introduction to 'pmcbioc'","text":"Start connecting database. Since database already exists, opens ‘read ’ one worry accidentally corrupting .","code":"db <- pmcbioc_db(\"~/a/github/pmcbioc/pmc_result.duckdb\") db #> pmcbioc_db: ~/a/github/pmcbioc/pmc_result.duckdb #> connected: TRUE #> read_only: TRUE #> db_tables(): article, author, index, keyword, refpmid"},{"path":[]},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"article","dir":"Articles","previous_headings":"Explore our data > Article metadata","what":"article","title":"Introduction to 'pmcbioc'","text":"Use dplyr functions open explore tables. Start article table. row represents result returned original PubMedCentral query. fields id internal identifier, representing sequence article original XML file. used conjunction index table. pmcid (PubMedCentral identifier), title, journal, pmid (PubMed identifier) self-explanatory. year earliest year recorded PubMedCentral record. articles multiple publication dates associated , e.g., electronic publication, submission NIH, etc. Missing values occur XPath used extract data failed identify relevant information. believe content XML associated record partly discretion journal. Use article table plot citations function year. Start loading ggplot2 package Summarize number publications per year. Remember collect() result tibble fully -memory. Plot relationship. One row removed, corresponding records year extracted XML. final year incomplete, lag publication indexing PubMedCentral, last two points anomaly.   Journals 100 articles mentioning Bioconductor summarized (unnamed journal corresponds records XPath extract name).","code":"tbl(db, \"article\") #> # Source:   table<article> [?? x 6] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>       id pmcid    title                                      journal  year pmid  #>    <int> <chr>    <chr>                                      <chr>   <int> <chr> #>  1     1 10580555 Coexpression analysis of lncRNAs and mRNA… BMC Ve…  2023 3784… #>  2     2 10578971 Unbiased gene expression analysis of the … Bone &…  2023 NA    #>  3     3 10579997 Clinical and biological significance of c… Clinic…  2023 3784… #>  4     4 10580377 Katdetectr: an R/bioconductor package uti… GigaSc…  2023 NA    #>  5     5 10580564 Differential transcriptome response follo… Virolo…  2023 NA    #>  6     6 10577922 Maternal adverse childhood experiences (A… Clinic…  2023 3784… #>  7     7 10578035 Data-driven identification of total RNA e… Genome…  2023 NA    #>  8     8 10578040 Analysis of transcriptomic features revea… Genome…  2023 3784… #>  9     9 10577904 Single-cell RNA sequencing distinctly cha… Genome…  2023 3784… #> 10    10 10580862 Parvimonas micra, an oral pathobiont asso… Gut Mi…  2023 3784… #> # ℹ more rows tbl(db, \"article\") |>     count() #> # Source:   SQL [1 x 1] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>       n #>   <dbl> #> 1 72446 library(ggplot2) pubs_per_year <-     tbl(db, \"article\") |>     count(year) |>     collect() ggplot(pubs_per_year) +     aes(x = year, y = n) +     geom_point() +     scale_y_log10() tbl(db, \"article\") |>     count(journal, sort = TRUE) |>     filter(n >= 100) |>     collect() |>     DT::datatable()"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"author","dir":"Articles","previous_headings":"Explore our data > Article metadata","what":"author","title":"Introduction to 'pmcbioc'","text":"author table associates author surname given names PubMedCentral identifiers. instances individual authors extracted (e.g., journal reported author using format XPath capture). entries reported NA, simply omitted table. Thus authors receive credit publications. prolific authors (least unique combinations surname given names) found :  Data inconsistencies easily resolved, e.g., ? Publications individual authors can found joining author article tables using PubMedCentral id.","code":"tbl(db, \"author\") #> # Source:   table<author> [?? x 3] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>    pmcid    surname    givenname #>    <chr>    <chr>      <chr>     #>  1 10580555 Xia        Xiaojing  #>  2 10580555 Hou        Jie       #>  3 10580555 Ren        Pengfei   #>  4 10580555 Liu        Mingcheng #>  5 10580555 Wang       Lei       #>  6 10580555 Wei        Xiaobing  #>  7 10580555 Teng       Zhanwei   #>  8 10580555 Kasianenko Oksana    #>  9 10580555 Cheng      Likun     #> 10 10580555 Hu         Jianhe    #> # ℹ more rows tbl(db, \"author\") |>     count() #> # Source:   SQL [1 x 1] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>        n #>    <dbl> #> 1 746369 tbl(db, \"author\") |>     count(surname, givenname, sort = TRUE) |>     head(100) |>     collect() |>     DT::datatable() tbl(db, \"author\") |>     filter(surname == \"Morgan\", givenname %like% \"Martin%\") |>     count(surname, givenname) #> # Source:   SQL [2 x 3] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>   surname givenname     n #>   <chr>   <chr>     <dbl> #> 1 Morgan  Martin       27 #> 2 Morgan  Martin T.     5 tbl(db, \"author\") |>     filter(surname == \"Morgan\", givenname %like% \"Martin%\") |>     left_join(tbl(db, \"article\"), by = \"pmcid\") |>     collect() |>     mutate(         author = paste(surname, givenname, sep = \", \"),         ## remove \"\\n\" in one record         title = gsub(\"[[:space:]]+\", \" \", title)     ) |>     select(author, year, title, journal, pmcid, pmid) |>     DT::datatable()"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"keyword-and-refpmid","dir":"Articles","previous_headings":"Explore our data > Article metadata","what":"keyword and refpmid","title":"Introduction to 'pmcbioc'","text":"keyword table summarizes keywords associated publication. Keywords standardized, e.g, bioinformatic bioinformatics used. Nonetheless, provides insight areas Bioconductor useful; analysis associate keyword year model shifting areas interest.  refpmid table summarizes PubMed identifiers citations article. One can ask publications mentioning ‘Bioconductor’ cited publications mentioning ‘Bioconductor’","code":"tbl(db, \"keyword\") #> # Source:   table<keyword> [?? x 2] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>    pmcid    keyword                        #>    <chr>    <chr>                          #>  1 10580555 Mastitis                       #>  2 10580555 lncRNA                         #>  3 10580555 mRNA                           #>  4 10580555 Mammary gland epithelial cells #>  5 10580555 RNA-seq                        #>  6 10578971 Fracture healing               #>  7 10578971 Fracture nonunion              #>  8 10578971 Zucker rats                    #>  9 10578971 Type 2 diabetes mellitus       #> 10 10578971 fracture and of the healing    #> # ℹ more rows tbl(db, \"keyword\") |>     count(keyword = tolower(keyword)) |>     filter(n >= 100) |>     arrange(desc(n)) |>     collect() |>     DT::datatable() tbl(db, \"refpmid\") #> # Source:   table<refpmid> [?? x 2] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>    pmcid    refpmid  #>    <chr>    <chr>    #>  1 10580555 32051050 #>  2 10580555 32257646 #>  3 10580555 17936907 #>  4 10580555 35021119 #>  5 10580555 31153885 #>  6 10580555 31606213 #>  7 10580555 34406447 #>  8 10580555 30683918 #>  9 10580555 29230038 #> 10 10580555 28626066 #> # ℹ more rows ## FIXME: is this correct? tbl(db, \"refpmid\") |>     count(refpmid, sort = TRUE) |>     right_join(tbl(db, \"article\"), by = c(refpmid = \"pmid\")) |>     arrange(desc(n)) |>     head(100) |>     collect() |>     select(n_citn = \"n\", title, journal, year) |>     DT::datatable() #> Warning: ORDER BY is ignored in subqueries without LIMIT #> ℹ Do you need to move arrange() later in the pipeline or use window_order() instead?"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"querying-individual-records","dir":"Articles","previous_headings":"Explore our data","what":"Querying individual records","title":"Introduction to 'pmcbioc'","text":"XML records extremely rich. Individual records can retrieved queried. instance fifth record can use index table query full XML record using XPath count number references full XML first five records records can queried using, e.g, XPath xmlChildren() [[ XML package.","code":"tbl(db, \"article\") |>     filter(id == 5) #> # Source:   SQL [1 x 6] #> # Database: DuckDB v0.9.1 [root@Darwin 21.6.0:R 4.3.1/~/a/github/pmcbioc/pmc_result.duckdb] #>      id pmcid    title                                       journal  year pmid  #>   <int> <chr>    <chr>                                       <chr>   <int> <chr> #> 1     5 10580564 Differential transcriptome response follow… Virolo…  2023 NA xml_file <- \"~/a/github/pmcbioc/pmc_result.xml\" tbl(db, \"index\") |>     filter(id == 5) |>     xml_xpath(         \"count(//article/back/ref-list/ref)\",         xml_file = xml_file     ) #> [1] 79 first_five <-     tbl(db, \"index\") |>     filter(id <= 5) |>     xml_xpath(xml_file = xml_file) first_five[\"//article-meta//article-title\"] |>     XML::xmlValue() #> [1] \"Coexpression analysis of lncRNAs and mRNAs identifies potential regulatory long noncoding RNAs involved in the inflammatory effects of lipopolysaccharide on bovine mammary epithelial cells\" #> [2] \"Unbiased gene expression analysis of the delayed fracture healing observed in Zucker diabetic fatty rats\"                                                                                     #> [3] \"Clinical and biological significance of circulating miRNAs in chronic pancreatitis patients undergoing total pancreatectomy with islet autotransplantation\"                                   #> [4] \"Katdetectr: an R/bioconductor package utilizing unsupervised changepoint analysis for robust kataegis detection\"                                                                              #> [5] \"Differential transcriptome response following infection of porcine ileal enteroids with species A and C rotaviruses\""},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"final-steps-1","dir":"Articles","previous_headings":"","what":"Final steps","title":"Introduction to 'pmcbioc'","text":"Remember disconnect database.","code":"db_disconnect(db) #> pmcbioc_db: ~/a/github/pmcbioc/pmc_result.duckdb #> connected: FALSE #> read_only: TRUE"},{"path":"https://mtmorgan.github.io/pmcbioc/articles/introduction.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Introduction to 'pmcbioc'","text":"","code":"sessionInfo() #> R version 4.3.1 Patched (2023-10-10 r85312) #> Platform: aarch64-apple-darwin21.6.0 (64-bit) #> Running under: macOS Monterey 12.6.8 #>  #> Matrix products: default #> BLAS:   /Users/ma38727/bin/R-4-3-branch/lib/libRblas.dylib  #> LAPACK: /Users/ma38727/bin/R-4-3-branch/lib/libRlapack.dylib;  LAPACK version 3.11.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/New_York #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.4.4 pmcbioc_0.0.4 dplyr_1.1.3   #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.7        utf8_1.2.3        generics_0.1.3    spdl_0.0.5        #>  [5] stringi_1.7.12    digest_0.6.33     magrittr_2.0.3    evaluate_0.22     #>  [9] grid_4.3.1        fastmap_1.1.1     blob_1.2.4        rprojroot_2.0.3   #> [13] jsonlite_1.8.7    DBI_1.1.3         purrr_1.0.2       fansi_1.0.5       #> [17] crosstalk_1.2.0   scales_1.2.1      XML_3.99-0.14     textshaping_0.3.7 #> [21] jquerylib_0.1.4   duckdb_0.9.1      cli_3.6.1         rlang_1.1.1       #> [25] dbplyr_2.3.4      ellipsis_0.3.2    munsell_0.5.0     withr_2.5.1       #> [29] cachem_1.0.8      yaml_2.3.7        tools_4.3.1       memoise_2.0.1     #> [33] colorspace_2.1-0  DT_0.30           vctrs_0.6.4       R6_2.5.1          #> [37] lifecycle_1.0.3   RcppSpdlog_0.0.14 stringr_1.5.0     htmlwidgets_1.6.2 #> [41] fs_1.6.3          ragg_1.2.6        pkgconfig_2.0.3   desc_1.4.2        #> [45] pkgdown_2.0.7     pillar_1.9.0      bslib_0.5.1       gtable_0.3.4      #> [49] glue_1.6.2        Rcpp_1.0.11       systemfonts_1.0.5 xfun_0.40         #> [53] tibble_3.2.1      tidyselect_1.2.0  knitr_1.44        farver_2.1.1      #> [57] htmltools_0.5.6.1 labeling_0.4.3    rmarkdown_2.25    compiler_4.3.1"},{"path":"https://mtmorgan.github.io/pmcbioc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2023). pmcbioc: Summarize 'PubMedCentral' Publications Mentioning 'Bioconductor'. R package version 0.0.4, https://mtmorgan.github.io/pmcbioc/.","code":"@Manual{,   title = {pmcbioc: Summarize 'PubMedCentral' Publications Mentioning 'Bioconductor'},   author = {Martin Morgan},   year = {2023},   note = {R package version 0.0.4},   url = {https://mtmorgan.github.io/pmcbioc/}, }"},{"path":"https://mtmorgan.github.io/pmcbioc/index.html","id":"pmcbioc","dir":"","previous_headings":"","what":"Summarize PubMedCentral Publications Mentioning Bioconductor","title":"Summarize PubMedCentral Publications Mentioning Bioconductor","text":"goal pmcbioc facilitate summary analysis PubMedCentral result sets. PubMedCentral results XML files containing article metadata, body article, end matter (citations, etc.). pmcbioc parses XML extract article metadata (title, year, author, keyword, reference PMID) database quick access. pmcbioc also indexes PubMedCentral XML file provides facilities rapidly querying file.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Summarize PubMedCentral Publications Mentioning Bioconductor","text":"Install development version pmcbioc GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mtmorgan/pmcbioc\")"},{"path":"https://mtmorgan.github.io/pmcbioc/index.html","id":"use-and-example","dir":"","previous_headings":"","what":"Use and example","title":"Summarize PubMedCentral Publications Mentioning Bioconductor","text":"See introduction article basic use, including parsing indexing PubMedCentral XML database fast access key data. simple observations Bioconductor citations downloaded 2023-10-18 include: Publications grow exponentially, perhaps decreased rate 2010. PLoS ONE, Scientific Reports Nature Communications three prominent venues publications Bioconductor. Authors mentioning Bioconductor little difficult distinguish (shared surname given names), mentioning unambiguous author ‘Quackenbush’. ‘Huber’ mentioning Bioconductor leader. Common keywords emphasize gene expression, RNA-Seq, methylation, transcriptomics, epigenetics, etc. Publications edgeR, DESeq2, limma, original Bioconductor book cited publications mentioning Bioconductor.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/pmcbioc_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a DuckDB database of article metadata — pmcbioc_db","title":"Connect to a DuckDB database of article metadata — pmcbioc_db","text":"pmcbioc_db() connects new existing DuckDB database store article metadata index individual articles. database effectively explored using 'dbplyr' / 'dplyr'. db_disconnect() disconnects DuckDB database, closing connection shutting DuckDB instance. db_dir() returns path database. db_tables() lists tables defined database. Use tbl() create dbplyr tibble table database.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/pmcbioc_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a DuckDB database of article metadata — pmcbioc_db","text":"","code":"pmcbioc_db(db_dir, read_only = TRUE)  # S3 method for pmcbioc_db print(x, ...)  db_disconnect(db)  db_dir(db)  db_tables(db)  # S3 method for pmcbioc_db tbl(src, from, ...)"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/pmcbioc_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a DuckDB database of article metadata — pmcbioc_db","text":"db_dir character(1) file path existing new DuckDB database. path exists, database open 'read ' (default) avoid corruption existing data. read_only logical(1) allows existing databases open updating (e.g., adding article XML index step separate parsing metadata). x print.pmcbioc_db, pmcbioc_db object ... tbl(), additional arguments passed duckdb:::tbl.duckdb_connection(). db database object returned pmcbioc_db(). src object created pmcbioc_db(). name table used.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/pmcbioc_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to a DuckDB database of article metadata — pmcbioc_db","text":"pmcbioc_db() returns pmcbioc_db object can used open metadata index tables. db_dir() returns database scalar character. db_tables() returns character vector tables defined database. tbl() returns dbplyr tibble representing DuckDB table.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a PubMedCentral XML file for fast record access. — xml_index","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"xml_index() creates index XML file retrieved PubMedCentral, storing index DuckDB database. Use xml_xpath() query index.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"","code":"xml_index(xml_file = \"pmc_result.xml\", db)"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"xml_file character(1) file path PubMedCentral XML file. db database object returned pmcbioc_db() read_only = FALSE.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index a PubMedCentral XML file for fast record access. — xml_index","text":"xml_index() returns pmcbioc_db database argument db.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a PubMedCentral XML file to a DuckDB database — xml_parse","title":"Parse a PubMedCentral XML file to a DuckDB database — xml_parse","text":"xml_parse() processes PubMedCentral XML file extracting XML elements, transforming text integer representations, loading result database.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a PubMedCentral XML file to a DuckDB database — xml_parse","text":"","code":"xml_parse(xml_file, db)"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a PubMedCentral XML file to a DuckDB database — xml_parse","text":"xml_parse() returns pmcbioc_db database passed argument db, updated include tables described . tables follows: article includes columns pmcid, title, journal, year, pmid. author one--many map pmcid author surname givenname. keyword one--many map pmcid keyword. refpmid one--many map pmcid refpmid PubMed identifiers cited references.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_parse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse a PubMedCentral XML file to a DuckDB database — xml_parse","text":"xml_parse() can slow, e.g., 1000 records per minute, grow consume large amount memory, e.g., 18 Gb. xml_parse() uses XML::xmlEventParse() iterate XML file. //article branch queried using XPath expressions. expressions subsequent transformations meant extract following information; currently, records processed correctly. pmcid: PubMedCentral identifier associated record. title: article title. journal: journal article published. year: year publication, represented integer. Articles may several publication dates (e.g., electronically physically). year earliest date record. pmid: PubMed identifier record. surname: Surname author. authors surname. givenname: Given name(s) author. authors given names. keyword: Keywords associated publication. Keywords standardized refpmid: PubMed identifiers reference record. pmcid used key across database tables.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"xml_xpath() queries indexed PubMedCentral XML file, returning records indicated db_index queried using xpath.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"","code":"xml_xpath(db_index, xpath = NULL, xml_file = \"pmc_result.xml\")"},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"`db_index` tibble columns start length, typcially result filtering index table pmcbioc_db() database. `xpath` NULL character(1) XPath expression query records db_index.","code":""},{"path":"https://mtmorgan.github.io/pmcbioc/reference/xml_xpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use XPath to query records of a PubMedCentral XML file — xml_xpath","text":"xpath = NULL, xml_xpath() returns XML object representing records db_index <pmc-articleset>...<\/pmc-articleset>. xpath character(1), records db_index queried using XPath. return value can coerced R representation XML::xmlValue().","code":""}]
