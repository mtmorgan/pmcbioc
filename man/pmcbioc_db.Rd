% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmcbioc_db.R
\name{pmcbioc_db}
\alias{pmcbioc_db}
\alias{print.pmcbioc_db}
\alias{db_disconnect}
\alias{db_dir}
\alias{db_tables}
\alias{tbl.pmcbioc_db}
\title{Connect to a DuckDB database of article metadata}
\usage{
pmcbioc_db(db_dir, read_only = TRUE)

\method{print}{pmcbioc_db}(x, ...)

db_disconnect(db)

db_dir(db)

db_tables(db)

\method{tbl}{pmcbioc_db}(src, from, ...)
}
\arguments{
\item{db_dir}{character(1) \emph{file} path to an existing or new DuckDB
database. If the path exists, the database is open 'read only'
(by default) to avoid corruption of existing data.}

\item{read_only}{logical(1) allows existing databases to be open
for updating (e.g., adding the article XML index as a step
separate from parsing the metadata).}

\item{x}{for \code{print.pmcbioc_db}, a \code{pmcbioc_db} object}

\item{...}{for \code{tbl()}, additional arguments passed to
\code{duckdb:::tbl.duckdb_connection()}.}

\item{db}{a database object returned by \code{pmcbioc_db()}.}

\item{src}{an object created with \code{pmcbioc_db()}.}

\item{from}{the name of the table to be used.}
}
\value{
\code{pmcbioc_db()} returns a \code{pmcbioc_db} object that can be
used to open metadata and index tables.

\code{db_dir()} returns the to the database as a scalar character.

\code{db_tables()} returns a character vector of tables defined
in the database.

\code{tbl()} returns a dbplyr tibble representing the DuckDB
table.
}
\description{
\code{pmcbioc_db()} connects to a new or existing DuckDB
database to store article metadata and an index individual
articles. The database is effectively explored using 'dbplyr' /
'dplyr'.

\code{db_disconnect()} disconnects from the DuckDB
database, closing the connection and shutting down the DuckDB
instance.

\code{db_dir()} returns the path to the database.

\code{db_tables()} lists the tables defined in the
database.

Use \code{tbl()} to create a dbplyr tibble from a table in
the database.
}
